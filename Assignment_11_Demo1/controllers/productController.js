const Product = require('../models/productModel');
const { Op } = require('sequelize');

// üü¶ L·∫•y to√†n b·ªô s·∫£n ph·∫©m (ph√¢n trang + s·∫Øp x·∫øp)
exports.getAllProducts = async (req, res) => {
  try {
    const page = parseInt(req.query.page) || 1;
    const limit = 10;
    const offset = (page - 1) * limit;

    // üü¢ Nh·∫≠n query ƒë·ªÉ ch·ªçn c·ªôt s·∫Øp x·∫øp & th·ª© t·ª±
    const sortBy = req.query.sortBy || 'id'; // m·∫∑c ƒë·ªãnh s·∫Øp theo ID
    const sortOrder = req.query.sortOrder === 'desc' ? 'DESC' : 'ASC';

    const { count, rows } = await Product.findAndCountAll({
      limit,
      offset,
      order: [[sortBy, sortOrder]],
    });

    res.render('admin/index', {
      products: rows,
      currentPage: page,
      totalPages: Math.ceil(count / limit),
      sortBy,
      sortOrder,
    });
  } catch (err) {
    console.error('‚ùå L·ªói l·∫•y s·∫£n ph·∫©m:', err);
    res.status(500).send('L·ªói server khi l·∫•y s·∫£n ph·∫©m');
  }
};

// üü© Th√™m s·∫£n ph·∫©m m·ªõi
exports.create = async (req, res) => {
  try {
    const { name, price, description } = req.body;
    const image = req.file ? req.file.filename : null;

    // ‚úÖ N·∫øu b·∫£ng tr·ªëng th√¨ reset AUTO_INCREMENT v·ªÅ 1
    const count = await Product.count();
    if (count === 0) {
      await Product.sequelize.query('ALTER TABLE products AUTO_INCREMENT = 1;');
    }

    await Product.create({ name, price, imageUrl: image, description });
    res.redirect('/admin');
  } catch (err) {
    console.error('‚ùå L·ªói t·∫°o s·∫£n ph·∫©m:', err);
    res.status(500).send('L·ªói server khi t·∫°o s·∫£n ph·∫©m');
  }
};

// üü® Ch·ªânh s·ª≠a s·∫£n ph·∫©m
exports.edit = async (req, res) => {
  try {
    const product = await Product.findByPk(req.params.id);
    res.render('admin/edit', { product });
  } catch (err) {
    console.error('‚ùå L·ªói edit s·∫£n ph·∫©m:', err);
    res.status(500).send('L·ªói khi l·∫•y th√¥ng tin s·∫£n ph·∫©m ƒë·ªÉ s·ª≠a');
  }
};

// üüß C·∫≠p nh·∫≠t s·∫£n ph·∫©m
exports.update = async (req, res) => {
  try {
    const { name, price, description } = req.body;
    const updateData = { name, price, description };
    if (req.file) updateData.imageUrl = req.file.filename;

    await Product.update(updateData, {
      where: { id: req.params.id },
    });

    res.redirect('/admin');
  } catch (err) {
    console.error('‚ùå L·ªói c·∫≠p nh·∫≠t s·∫£n ph·∫©m:', err);
    res.status(500).send('L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m');
  }
};

// üü• X√≥a s·∫£n ph·∫©m
exports.delete = async (req, res) => {
  try {
    await Product.destroy({
      where: { id: req.params.id },
    });

    // ‚úÖ Sau khi x√≥a, ki·ªÉm tra n·∫øu b·∫£ng tr·ªëng th√¨ reset l·∫°i ID v·ªÅ 1
    const count = await Product.count();
    if (count === 0) {
      await Product.sequelize.query('ALTER TABLE products AUTO_INCREMENT = 1;');
    }

    res.redirect('/admin');
  } catch (err) {
    console.error('‚ùå L·ªói x√≥a s·∫£n ph·∫©m:', err);
    res.status(500).send('L·ªói khi x√≥a s·∫£n ph·∫©m');
  }
};
